genre_country <- genre_country %>%
filter(country == "United States" | "India") %>%
group_by(country, listed_in) %>%
summarise(count = n())
genre_country <- genre_country %>%
filter(country == "United States", country == "India") %>%
group_by(country, listed_in) %>%
summarise(count = n())
genre_country <- movie %>%
mutate(listed_in = strsplit(as.character(listed_in), ", ")) %>%
unnest(listed_in) %>%
mutate(country = strsplit(as.character(country), ", ")) %>%
unnest(country) %>%
select("title","country","date_added","listed_in")
genre_country
unique(genre_country$country) # some country names have commas
length(unique(genre_country$country))
unique(genre_country$listed_in) # clean
genre_country <- genre_country %>%
mutate(country = gsub(",","",country))
genre_country
unique(genre_country$country) # commas removed from country names
length(unique(genre_country$country))
genre_country <- genre_country %>%
filter(country == "United States", country == "India") %>%
group_by(country, listed_in) %>%
summarise(count = n())
genre_country <- genre_country %>%
filter(country == "United States" | country == "India") %>%
group_by(country, listed_in) %>%
summarise(count = n())
genre_country <- movie %>%
mutate(listed_in = strsplit(as.character(listed_in), ", ")) %>%
unnest(listed_in) %>%
mutate(country = strsplit(as.character(country), ", ")) %>%
unnest(country) %>%
select("title","country","date_added","listed_in")
genre_country
unique(genre_country$country) # some country names have commas
length(unique(genre_country$country))
unique(genre_country$listed_in) # clean
genre_country <- genre_country %>%
mutate(country = gsub(",","",country))
genre_country
unique(genre_country$country) # commas removed from country names
length(unique(genre_country$country))
genre_country <- genre_country %>%
filter(country == "United States" | country == "India") %>%
group_by(country, listed_in) %>%
summarise(count = n())
genre_country <- genre_country %>%
filter(country == "United States" |
country == "India"|
country == "United Kingdom"|
country == "Canada"|
country == "France") %>%
group_by(country, listed_in) %>%
summarise(count = n())
genre_country <- movie %>%
mutate(listed_in = strsplit(as.character(listed_in), ", ")) %>%
unnest(listed_in) %>%
mutate(country = strsplit(as.character(country), ", ")) %>%
unnest(country) %>%
select("title","country","date_added","listed_in")
genre_country
unique(genre_country$country) # some country names have commas
length(unique(genre_country$country))
unique(genre_country$listed_in) # clean
genre_country <- genre_country %>%
mutate(country = gsub(",","",country))
genre_country
unique(genre_country$country) # commas removed from country names
length(unique(genre_country$country))
#모든 나라의 장르 비율
#탑 몇나라만 뽑을수없나???
genre_country <- genre_country %>%
filter(country == "United States" |
country == "India"|
country == "United Kingdom"|
country == "Canada"|
country == "France") %>%
group_by(country, listed_in) %>%
summarise(count = n())
bar <- ggplot(genre_country, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="stack", stat="identity")
bar
bar <- ggplot(genre_country, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="fill", stat="identity")
bar
bar <- ggplot(genre_country, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="stack", stat="identity")
bar
genre_usa <- genre_country %>%
filter(country == "United States") %>%
arrange(desc(count))
genre_usa <- genre_country %>%
filter(country == "United States") %>%
arrange(desc(count))
genre_usa <- genre_country %>%
filter(country == "United States") %>%
arrange(desc(count)) %>%
summarise(percent = n()/nrow(.) * 100)
genre_usa <- genre_country %>%
filter(country == "United States") %>%
arrange(desc(count))
genre_country <- movie %>%
mutate(listed_in = strsplit(as.character(listed_in), ", ")) %>%
unnest(listed_in) %>%
mutate(country = strsplit(as.character(country), ", ")) %>%
unnest(country) %>%
select("title","country","date_added","listed_in")
genre_country
unique(genre_country$country) # some country names have commas
length(unique(genre_country$country))
unique(genre_country$listed_in) # clean
genre_country <- genre_country %>%
mutate(country = gsub(",","",country))
genre_country
unique(genre_country$country) # commas removed from country names
length(unique(genre_country$country))
#모든 나라의 장르 비율
#탑 몇나라만 뽑을수없나??? number of movies의 탑5 나라이름 골라넣었음
genre_country <- genre_country %>%
filter(country == "United States" |
country == "India"|
country == "United Kingdom"|
country == "Canada"|
country == "France") %>%
group_by(country, listed_in) %>%
summarise(count = n())
# percent stacked bar chart
bar <- ggplot(genre_country, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="stack", stat="identity")
bar
# 미국 한 나라의 장르 비율
#도넛차트로 하고싶은뎅
genre_usa <- genre_country %>%
filter(country == "United States") %>%
arrange(desc(count))
genre_usa <- genre_country %>%
filter(country == "United States") %>%
arrange(desc(count)) %>%
summarise(percent = n()/nrow(.) * 100)
genre_country <- movie %>%
mutate(listed_in = strsplit(as.character(listed_in), ", ")) %>%
unnest(listed_in) %>%
mutate(country = strsplit(as.character(country), ", ")) %>%
unnest(country) %>%
select("title","country","date_added","listed_in")
genre_country
unique(genre_country$country) # some country names have commas
length(unique(genre_country$country))
unique(genre_country$listed_in) # clean
genre_country <- genre_country %>%
mutate(country = gsub(",","",country))
genre_country
unique(genre_country$country) # commas removed from country names
length(unique(genre_country$country))
#모든 나라의 장르 비율
#탑 몇나라만 뽑을수없나??? number of movies의 탑5 나라이름 골라넣었음
genre_country <- genre_country %>%
filter(country == "United States" |
country == "India"|
country == "United Kingdom"|
country == "Canada"|
country == "France") %>%
group_by(country, listed_in) %>%
summarise(count = n())
# percent stacked bar chart
bar <- ggplot(genre_country, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="stack", stat="identity")
bar
# 미국 한 나라의 장르 비율
#도넛차트로 하고싶은뎅
genre_usa <- genre_country %>%
filter(country == "United States") %>%
arrange(desc(count)) %>%
summarise(percent = n()/nrow(.) * 100)
genre_country <- movie %>%
mutate(listed_in = strsplit(as.character(listed_in), ", ")) %>%
unnest(listed_in) %>%
mutate(country = strsplit(as.character(country), ", ")) %>%
unnest(country) %>%
select("title","country","date_added","listed_in")
genre_country
unique(genre_country$country) # some country names have commas
length(unique(genre_country$country))
unique(genre_country$listed_in) # clean
genre_country <- genre_country %>%
mutate(country = gsub(",","",country))
genre_country
unique(genre_country$country) # commas removed from country names
length(unique(genre_country$country))
#모든 나라의 장르 비율
#탑 몇나라만 뽑을수없나??? number of movies의 탑5 나라이름 골라넣었음
genre_country <- genre_country %>%
filter(country == "United States" |
country == "India"|
country == "United Kingdom"|
country == "Canada"|
country == "France") %>%
group_by(country, listed_in) %>%
summarise(count = n())
# percent stacked bar chart
bar <- ggplot(genre_country, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="stack", stat="identity")
bar
# 미국 한 나라의 장르 비율
#도넛차트로 하고싶은뎅
genre_usa <- genre_country %>%
filter(country == "United States") %>%
arrange(desc(count))
bar <- ggplot(genre_usa, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="dodge", stat="identity")
bar
pie <- ggplot(genre_usa, aes(x = "", y = count, fill = reorder(listed_in, count))) +
# pies in order of largest percentage to smallest percentage
geom_bar(width = 1, stat = "identity", color = "white") +
#geom_text(aes(x = 1.58, label = paste0(round(percent,1),"%")),
#          position = position_stack(vjust = .5), size = 1.85) + # percentage labels
coord_polar("y", start = 0)
pie
pie <- ggplot(genre_usa, aes(x = "", y = count, fill = reorder(listed_in, count))) +
# pies in order of largest percentage to smallest percentage
geom_bar(width = 1, stat = "identity", color = "white") +
#geom_text(aes(x = 1.58, label = paste0(round(percent,1),"%")),
#          position = position_stack(vjust = .5), size = 1.85) + # percentage labels
coord_polar("y", start = 0) +
labs(fill = "Genre") +
guides(fill = guide_legend(reverse = TRUE))
pie
bar <- ggplot(genre_usa, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="dodge", stat="identity")
bar
pie <- ggplot(genre_usa, aes(x = "", y = count, fill = reorder(listed_in, count))) +
# pies in order of largest percentage to smallest percentage
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0) +
labs(fill = "Genre") +
guides(fill = guide_legend(reverse = TRUE))
pie
p1 <- ggplot(genre_usa) +
geom_col(aes(x = 1, y = n, fill = listed_in), position = "fill") +
coord_polar(theta = "y")
p1
p1 <- ggplot(genre_usa) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y")
p1
bar <- ggplot(genre_usa, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="dodge", stat="identity")
bar
p1 <- ggplot(genre_usa) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y")
p1
p1 <- ggplot(genre_usa) +
geom_col(aes(x = 1, y = count, fill = reorder(listed_in, count)), position = "fill") +
coord_polar(theta = "y") +
labs(fill = "Genre") +
guides(fill = guide_legend(reverse = TRUE))
p1
p1 <- ggplot(genre_usa) +
geom_col(aes(x = 1, y = count, fill = reorder(listed_in, count)), position = "fill") +
coord_polar(theta = "y")
p1
p1 <- ggplot(genre_usa) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y")
p1
p1 <- ggplot(genre_usa) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y", start = 9) +
labs(fill = "Genre")
p1
bar <- ggplot(genre_usa, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="dodge", stat="identity")
bar
p1 <- ggplot(genre_usa) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y", start = 9) +
labs(fill = "Genre") +
guides(fill = guide_legend(reverse = TRUE))
p1
bar <- ggplot(genre_country, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="stack", stat="identity")
bar
# 미국 한 나라의 장르 비율
#도넛차트로 하고싶은뎅
genre_usa <- genre_country %>%
filter(country == "United States") %>%
arrange(desc(count))
# donut chart 만들기
bar <- ggplot(genre_usa, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="dodge", stat="identity")
bar
p1 <- ggplot(genre_usa) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y", start = 9) +
labs(fill = "Genre") +
guides(fill = guide_legend(reverse = TRUE))
p1
donut <- p1 + xlim(0, 1.5)
donut
p1 <- ggplot(genre_usa) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y", start = 9) +
labs(fill = "Genre")+
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank())
p1
donut <- p1 + xlim(0, 1.5)
donut
p1 <- ggplot(genre_usa) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y", start = 0) +
labs(fill = "Genre")+
theme(axis.title = element_blank(), # remove axis and grid lines
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank())
p1
p1 <- ggplot(genre_usa) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y", start = 0) +
labs(title = "Movie Genres in United States", fill = "Genre")+
theme(axis.title = element_blank(), # remove axis and grid lines
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank())
p1
p1 <- ggplot(genre_usa) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y") +
labs(title = "Movie Genres in United States", fill = "Genre")+
theme(axis.title = element_blank(), # remove axis and grid lines
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank())
p1
p1 <- ggplot(genre_country) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y") +
labs(title = "Movie Genres", fill = "Genre")+
theme(axis.title = element_blank(), # remove axis and grid lines
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank())
p1
p2 <- p1 + facet_wrap(~ Sex) +
theme_bw()
p2
p2 <- p1 + facet_wrap(~ country) +
theme_bw()
p2
# 각 나라 별 도넛 차트 for genre
p1 <- ggplot(genre_country) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y") +
labs(title = "Movie Genres", fill = "Genre") +
theme(axis.title = element_blank(), # remove axis and grid lines
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
facet_wrap(~ country) +
theme_bw()
p1
pie <- ggplot(genre_country) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y") +
labs(title = "Movie Genres", fill = "Genre") +
theme(axis.title = element_blank(), # remove axis and grid lines
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
facet_wrap(~ country) +
theme_bw()
pie
pie <- ggplot(genre_country) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y") +
labs(title = "Movie Genres", fill = "Genre") +
theme(axis.title = element_blank(), # remove axis and grid lines
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
facet_wrap(~ country) +
theme_bw()
pie
bar <- ggplot(genre_country, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="stack", stat="identity")
bar
# 각 나라 별 도넛 차트 for genre
pie <- ggplot(genre_country) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y") +
labs(title = "Movie Genres", fill = "Genre") +
theme(axis.title = element_blank(), # remove axis and grid lines
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
facet_wrap(~ country) +
theme_bw()
pie
pie <- ggplot(genre_country) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y") +
labs(title = "Movie Genres", fill = "Genre") +
facet_wrap(~ country) +
theme_bw() +
theme(axis.title = element_blank(), # remove axis and grid lines
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
pie
# 각 나라 별 도넛 차트 for genre
pie <- ggplot(genre_country) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y") +
labs(title = "Movie Genres", fill = "Genre") +
facet_wrap(~ country) +
theme_bw() +
theme(axis.title = element_blank(), # remove axis and grid lines
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank())
pie
pie <- pie + xlim(0, 1.5)
pie
pie + geom_text(aes(x = 0, y = 0, label = country)) +
theme(strip.background=element_blank(),
strip.text=element_blank())
genre_country <- movie %>%
mutate(listed_in = strsplit(as.character(listed_in), ", ")) %>%
unnest(listed_in) %>%
mutate(country = strsplit(as.character(country), ", ")) %>%
unnest(country) %>%
select("title","country","date_added","listed_in")
genre_country
unique(genre_country$country) # some country names have commas
length(unique(genre_country$country))
unique(genre_country$listed_in) # clean
genre_country <- genre_country %>%
mutate(country = gsub(",","",country))
genre_country
unique(genre_country$country) # commas removed from country names
length(unique(genre_country$country))
#모든 나라의 장르 비율
#탑 몇나라만 뽑을수없나??? number of movies의 탑5 나라이름 골라넣었음
genre_country <- genre_country %>%
filter(country == "United States" |
country == "India"|
country == "United Kingdom"|
country == "Canada"|
country == "France") %>%
group_by(country, listed_in) %>%
summarise(count = n())
# percent stacked bar chart
bar <- ggplot(genre_country, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="stack", stat="identity")
bar
# 각 나라 별 도넛 차트 for genre
# https://homepage.divms.uiowa.edu/~luke/classes/STAT4580/catone.html
pie <- ggplot(genre_country) +
geom_col(aes(x = 1, y = count, fill = listed_in), position = "fill") +
coord_polar(theta = "y") +
labs(title = "Movie Genres", fill = "Genre") +
facet_wrap(~ country) +
theme_bw() +
theme(axis.title = element_blank(), # remove axis and grid lines
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank())
pie
pie <- pie + xlim(0, 1.5)
pie
# 미국 한 나라의 장르 비율
#도넛차트로 하고싶은뎅
genre_usa <- genre_country %>%
filter(country == "United States") %>%
arrange(desc(count))
# donut chart 만들기
bar <- ggplot(genre_usa, aes(fill=listed_in, y=count, x=country)) +
geom_bar(position="dodge", stat="identity") +
lab
View(genre_country)
